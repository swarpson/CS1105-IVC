Last login: Tue Apr  1 20:24:45 on ttys000
(base) swarpson@Swaroops-MacBook-Air ~ % mkdir ProjectX
cd ProjectX
git init
 
hint: Using 'master' as the name for the initial branch. This default branch name
hint: is subject to change. To configure the initial branch name to use in all
hint: of your new repositories, which will suppress this warning, call:
hint:
hint: 	git config --global init.defaultBranch <name>
hint:
hint: Names commonly chosen instead of 'master' are 'main', 'trunk' and
hint: 'development'. The just-created branch can be renamed via this command:
hint:
hint: 	git branch -m <name>
Initialized empty Git repository in /Users/swarpson/ProjectX/.git/
(base) swarpson@Swaroops-MacBook-Air ProjectX % echo "# ProjectX" > README.md
echo "This project is about..." >> README.md                          
(base) swarpson@Swaroops-MacBook-Air ProjectX % git add README.md
git commit -m "Add project objectives to README.md"
 
[master (root-commit) a397f2a] Add project objectives to README.md
 1 file changed, 2 insertions(+)
 create mode 100644 README.md
(base) swarpson@Swaroops-MacBook-Air ProjectX % git checkout -b development
 
Switched to a new branch 'development'
(base) swarpson@Swaroops-MacBook-Air ProjectX % echo "Project development guidelines." > dev_notes.txt
 
(base) swarpson@Swaroops-MacBook-Air ProjectX % git add dev_notes.txt
git commit -m "Add development notes"
 
[development de3c50b] Add development notes
 1 file changed, 1 insertion(+)
 create mode 100644 dev_notes.txt
(base) swarpson@Swaroops-MacBook-Air ProjectX % echo "Feature 1 implementation details." >> dev_notes.txt
 
(base) swarpson@Swaroops-MacBook-Air ProjectX % git add dev_notes.txt
git commit -m "Add Feature 1 implementation details"
 
[development 8f0cc0d] Add Feature 1 implementation details
 1 file changed, 1 insertion(+)
(base) swarpson@Swaroops-MacBook-Air ProjectX % git checkout development
git merge feature1
 
Already on 'development'
merge: feature1 - not something we can merge
(base) swarpson@Swaroops-MacBook-Air ProjectX % git add dev_notes.txt
git commit -m "Merge feature1 into development"
 
On branch development
nothing to commit, working tree clean
(base) swarpson@Swaroops-MacBook-Air ProjectX % echo "Temporary changes that need to be stashed." >> dev_notes.txt
 
(base) swarpson@Swaroops-MacBook-Air ProjectX % git stash
 
Saved working directory and index state WIP on development: 8f0cc0d Add Feature 1 implementation details
(base) swarpson@Swaroops-MacBook-Air ProjectX % git checkout main
echo "## How to Contribute" >> README.md
echo "Contribution guidelines go here..." >> README.md
 
error: pathspec 'main' did not match any file(s) known to git
(base) swarpson@Swaroops-MacBook-Air ProjectX % git branch
 
* development
  master
(base) swarpson@Swaroops-MacBook-Air ProjectX % git checkout master
 
M	README.md
Switched to branch 'master'
(base) swarpson@Swaroops-MacBook-Air ProjectX % git branch -m master main
 
(base) swarpson@Swaroops-MacBook-Air ProjectX % git checkout main
 
M	README.md
Already on 'main'
(base) swarpson@Swaroops-MacBook-Air ProjectX % git checkout main
echo "## How to Contribute" >> README.md
echo "Contribution guidelines go here..." >> README.md
 
M	README.md
Already on 'main'
(base) swarpson@Swaroops-MacBook-Air ProjectX % git add README.md
git commit -m "Add contribution guidelines to README.md"
 
[main c7e9521] Add contribution guidelines to README.md
 1 file changed, 4 insertions(+)
(base) swarpson@Swaroops-MacBook-Air ProjectX % git checkout development
git stash pop
 
Switched to branch 'development'
On branch development
Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git restore <file>..." to discard changes in working directory)
	modified:   dev_notes.txt

no changes added to commit (use "git add" and/or "git commit -a")
Dropped refs/stash@{0} (bd28db78a941e116f40ebf12dcf789acf3a9f267)
(base) swarpson@Swaroops-MacBook-Air ProjectX % git add dev_notes.txt
 
(base) swarpson@Swaroops-MacBook-Air ProjectX % git commit -m "Apply stashed changes to dev_notes.txt"
 
[development 728a0f5] Apply stashed changes to dev_notes.txt
 1 file changed, 1 insertion(+)
(base) swarpson@Swaroops-MacBook-Air ProjectX % git checkout development
 
Already on 'development'
(base) swarpson@Swaroops-MacBook-Air ProjectX % git push origin development
 
fatal: 'origin' does not appear to be a git repository
fatal: Could not read from remote repository.

Please make sure you have the correct access rights
and the repository exists.
(base) swarpson@Swaroops-MacBook-Air ProjectX % git remote -v
 
(base) swarpson@Swaroops-MacBook-Air ProjectX % git remote add origin https://github.com/swarpson/ProjectX.git
(base) swarpson@Swaroops-MacBook-Air ProjectX % git remote -v
 
origin	https://github.com/swarpson/ProjectX.git (fetch)
origin	https://github.com/swarpson/ProjectX.git (push)
(base) swarpson@Swaroops-MacBook-Air ProjectX % git push -u origin development
 
Enumerating objects: 12, done.
Counting objects: 100% (12/12), done.
Delta compression using up to 8 threads
Compressing objects: 100% (9/9), done.
Writing objects: 100% (12/12), 1.18 KiB | 1.18 MiB/s, done.
Total 12 (delta 1), reused 0 (delta 0), pack-reused 0 (from 0)
remote: Resolving deltas: 100% (1/1), done.
To https://github.com/swarpson/ProjectX.git
 * [new branch]      development -> development
branch 'development' set up to track 'origin/development'.
(base) swarpson@Swaroops-MacBook-Air ProjectX % git checkout main
git push -u origin main
 
Switched to branch 'main'
Enumerating objects: 5, done.
Counting objects: 100% (5/5), done.
Delta compression using up to 8 threads
Compressing objects: 100% (2/2), done.
Writing objects: 100% (3/3), 347 bytes | 347.00 KiB/s, done.
Total 3 (delta 0), reused 0 (delta 0), pack-reused 0 (from 0)
remote: 
remote: Create a pull request for 'main' on GitHub by visiting:
remote:      https://github.com/swarpson/ProjectX/pull/new/main
remote: 
To https://github.com/swarpson/ProjectX.git
 * [new branch]      main -> main
branch 'main' set up to track 'origin/main'.
(base) swarpson@Swaroops-MacBook-Air ProjectX % ls
 
README.md
(base) swarpson@Swaroops-MacBook-Air ProjectX % git pull origin development
 
From https://github.com/swarpson/ProjectX
 * branch            development -> FETCH_HEAD
hint: You have divergent branches and need to specify how to reconcile them.
hint: You can do so by running one of the following commands sometime before
hint: your next pull:
hint:
hint:   git config pull.rebase false  # merge
hint:   git config pull.rebase true   # rebase
hint:   git config pull.ff only       # fast-forward only
hint:
hint: You can replace "git config" with "git config --global" to set a default
hint: preference for all repositories. You can also pass --rebase, --no-rebase,
hint: or --ff-only on the command line to override the configured default per
hint: invocation.
fatal: Need to specify how to reconcile divergent branches.
(base) swarpson@Swaroops-MacBook-Air ProjectX % git checkout development
git pull origin development
 
Switched to branch 'development'
Your branch is up to date with 'origin/development'.
From https://github.com/swarpson/ProjectX
 * branch            development -> FETCH_HEAD
Already up to date.
(base) swarpson@Swaroops-MacBook-Air ProjectX % git add dev_notes.txt
git commit -m "Restore dev_notes.txt"
git push origin development
 
On branch development
Your branch is up to date with 'origin/development'.

nothing to commit, working tree clean
Everything up-to-date
(base) swarpson@Swaroops-MacBook-Air ProjectX % 
